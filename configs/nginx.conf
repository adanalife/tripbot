# c.p. https://www.iamjack.co.uk/blog/post/setting-multistream-server-nginx

# to use this in OBS:
# set stream service to Custom
# set server to rtmp://localhost/live

#user dmerrick;
worker_processes  1;

events {
    worker_connections  1024;
}

# http requests allow checking that rtmp is working and being published to
http { 

    # turn off server tokens and hide what server version you are using
    server_tokens off;

    include mime.types;
    default_type application/octet-stream;
    sendfile on;
    keepalive_timeout 65;

    server {
        listen 2345;
        server_name localhost;

        error_log /usr/local/var/log/nginx/error.log warn;

        # allows you to view stats
        location /stat {
            rtmp_stat all;
            rtmp_stat_stylesheet stat.xsl;
        }

        # allow stat xml styling to be accessed
        location /stat.xsl {
            root html;
        }

        # make a internal server page and put it in html
        error_page 500 502 503 504 /50x.html;
        location = /50x.html {
            root html;
        }
    }
}

# rtmp server configuration
rtmp {
    server {
        # port to listen on, I've left this as a default
        listen 1935;
        chunk_size 8192;

        # this is what you will stream to
        application live {
            live on;

            # record off means no vod saving
            record off;

            # allow publishing from all (change this to your ip if you wish to lock to ip address)
            allow publish 127.0.0.1;

            # uncomment this if you are going to deny every ip other than yours
            deny publish all;

            # push to all sub applications we will create (one each for each application)
            # push rtmp://localhost/youtube;
            push rtmp://localhost/twitch;
            # push rtmp://localhost/facebook;

            # facebook live requires 720p@30fps
            # exec nice -n 10 /usr/local/bin/ffmpeg -i rtmp://localhost/$app -ar 44100 -b:a 128k -pix_fmt yuv420p -profile:v baseline -s 1280x720 -bufsize 6000k -vb 400k -maxrate 1500k -deinterlace -acodec libfdk_aac -vcodec libx264 -preset veryfast -g 24 -r 24 -f flv rtmp://localhost/facebook;
            
            # for twitch I'm being more specific so I can define how my stream looks on twitch
            #exec ffmpeg -i rtmp://localhost/$app/$name -c:v libx264 -preset veryfast -c:a copy
            #      -b:v 3500k
            #      -bufsize 3500k
            #      -maxrate 3500k
            #      -s 1280x720 -r 30
            #      -f flv rtmp://localhost/twitch/$name;
        }

        # example youtube app
        application youtube {
            live on;
            record off;

            # only allow this machine to publish
            allow publish 127.0.0.1;
            deny publish all;

            # push url, this will be your stream url and stream key together
            push rtmp://a.rtmp.youtube.com/live2/b56w-xxxx-xxxx-f4cm;
        }

        # example twitch app
        application twitch {
            live on;
            record off;

            # only allow this machine to publish
            allow publish 127.0.0.1;
            deny publish all;

            # push url, this will be your stream url and stream key together
            #push rtmp://{twitch-stream-url};
            push rtmp://live-dfw.twitch.tv/app/live_42xxxxx17_wxlAxxxxxxxxxxxxxxxxT9SKujKgR1; # ADanaLife_staging
        }

        application facebook {
            live on;
            record off;

            allow publish 127.0.0.1;
            deny publish all;

            # push url, this will be your stream url and stream key together
            push rtmp://live-api-s.facebook.com:80/rtmp/23xxxxxxxxx53502?s_ps=1&s_sw=0&s_vt=api-s&a=AbwRKxxxxxxxxHxc; # A Dana Life

        }
    }
}
